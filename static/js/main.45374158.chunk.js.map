{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","imgUrlError","imdbUrlError","handleChange","event","target","name","value","setState","handleBlur","urlValidator","test","handleSubmit","preventDefault","props","onAdd","onSubmit","this","type","onChange","onBlur","placeholder","required","ClassNames","error","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45374158.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport ClassNames from 'classnames';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrlError: false,\n    imdbUrlError: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'imgUrl') {\n      this.setState({\n        imgUrlError: false,\n      });\n    }\n\n    if (name === 'imdbUrl') {\n      this.setState({\n        imdbUrlError: false,\n      });\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleBlur = (event) => {\n    const { name, value } = event.target;\n    // eslint-disable-next-line\n    const urlValidator = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (name === 'imgUrl' && !urlValidator.test(value)) {\n      this.setState({\n        imgUrlError: true,\n      });\n    }\n\n    if (name === 'imdbUrl' && !urlValidator.test(value)) {\n      this.setState({\n        imdbUrlError: true,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.imgUrlError\n      || this.state.imdbUrlError) {\n      return;\n    }\n\n    const movie = {\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    };\n\n    this.props.onAdd(movie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      imgUrlError: false,\n      imdbUrlError: false,\n    });\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"add-movie-form\"\n      >\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={this.state.title}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          placeholder=\"Title\"\n          required\n        />\n        <textarea\n          name=\"description\"\n          value={this.state.description}\n          onChange={this.handleChange}\n          placeholder=\"Description\"\n        />\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          className={ClassNames({ error: this.state.imgUrlError })}\n          value={this.state.imgUrl}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          placeholder=\"imgUrl\"\n          required\n        />\n        <span\n          className={ClassNames({ 'url-error': this.state.imgUrlError })}\n        />\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          className={ClassNames({ error: this.state.imdbUrlError })}\n          value={this.state.imdbUrl}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          placeholder=\"imdbUrl\"\n          required\n        />\n        <span\n          className={ClassNames({ 'url-error': this.state.imdbUrlError })}\n        />\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          value={this.state.imdbId}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          placeholder=\"imdbId\"\n          required\n        />\n        <button\n          type=\"submit\"\n        >\n          Add a movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}